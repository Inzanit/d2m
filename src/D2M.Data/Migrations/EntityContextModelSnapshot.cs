// <auto-generated />
using System;
using D2M.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace D2M.Data.Migrations
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("D2M.Data.Model.BehaviourConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("__Configurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Property = "HasDoneInitialSetUp",
                            Type = 1,
                            Value = "False"
                        },
                        new
                        {
                            Id = 2,
                            Property = "Prefix",
                            Type = 0,
                            Value = "?"
                        },
                        new
                        {
                            Id = 3,
                            Property = "IsDisabled",
                            Type = 1,
                            Value = "False"
                        },
                        new
                        {
                            Id = 4,
                            Property = "ParentCategoryId",
                            Type = 2,
                            Value = ""
                        },
                        new
                        {
                            Id = 5,
                            Property = "LogsChannelId",
                            Type = 2,
                            Value = ""
                        },
                        new
                        {
                            Id = 6,
                            Property = "StaffRoleId",
                            Type = 2,
                            Value = ""
                        });
                });

            modelBuilder.Entity("D2M.Data.Model.Message", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("SentByDiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SentDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ThreadId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ThreadId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("D2M.Data.Model.Thread", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("AssignedDiscordChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ClosedByDiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ClosedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("OpenedByDiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OpenedDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("D2M.Data.Model.Message", b =>
                {
                    b.HasOne("D2M.Data.Model.Thread", "Thread")
                        .WithMany("Messages")
                        .HasForeignKey("ThreadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
